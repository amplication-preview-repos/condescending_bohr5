/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  IntegrationService as PrismaIntegrationService,
} from "@prisma/client";

export class IntegrationServiceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.IntegrationServiceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.integrationService.count(args);
  }

  async integrationServices<T extends Prisma.IntegrationServiceFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.IntegrationServiceFindManyArgs>
  ): Promise<PrismaIntegrationService[]> {
    return this.prisma.integrationService.findMany<Prisma.IntegrationServiceFindManyArgs>(
      args
    );
  }
  async integrationService<T extends Prisma.IntegrationServiceFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.IntegrationServiceFindUniqueArgs>
  ): Promise<PrismaIntegrationService | null> {
    return this.prisma.integrationService.findUnique(args);
  }
  async createIntegrationService<T extends Prisma.IntegrationServiceCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.IntegrationServiceCreateArgs>
  ): Promise<PrismaIntegrationService> {
    return this.prisma.integrationService.create<T>(args);
  }
  async updateIntegrationService<T extends Prisma.IntegrationServiceUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.IntegrationServiceUpdateArgs>
  ): Promise<PrismaIntegrationService> {
    return this.prisma.integrationService.update<T>(args);
  }
  async deleteIntegrationService<T extends Prisma.IntegrationServiceDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.IntegrationServiceDeleteArgs>
  ): Promise<PrismaIntegrationService> {
    return this.prisma.integrationService.delete(args);
  }
}
